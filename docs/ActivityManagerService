 public final void com.android.server.am.ActivityManagerService.activityDestroyed(android.os.IBinder)
 public final void com.android.server.am.ActivityManagerService.activityIdle(android.os.IBinder,android.content.res.Configuration,boolean)
 public final void com.android.server.am.ActivityManagerService.activityPaused(android.os.IBinder)
 public final void com.android.server.am.ActivityManagerService.activityResumed(android.os.IBinder)
 public final void com.android.server.am.ActivityManagerService.activitySlept(android.os.IBinder)
 public final void com.android.server.am.ActivityManagerService.activityStopped(android.os.IBinder,android.os.Bundle,android.graphics.Bitmap,java.lang.CharSequence)
 final com.android.server.am.ProcessRecord com.android.server.am.ActivityManagerService.addAppLocked(android.content.pm.ApplicationInfo,boolean)
 public void com.android.server.am.ActivityManagerService.addErrorToDropBox(java.lang.String,com.android.server.am.ProcessRecord,java.lang.String,com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord,java.lang.String,java.lang.String,java.io.File,android.app.ApplicationErrorReport$CrashInfo)
 final void com.android.server.am.ActivityManagerService.addProcessToGcListLocked(com.android.server.am.ProcessRecord)
 final void com.android.server.am.ActivityManagerService.addRecentTaskLocked(com.android.server.am.TaskRecord)
 final void com.android.server.am.ActivityManagerService.appDiedLocked(com.android.server.am.ProcessRecord,int,android.app.IApplicationThread)
 final native void com.android.server.am.ActivityManagerService.appNotResponding(com.android.server.am.ProcessRecord,com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord,boolean,java.lang.String)
 public void com.android.server.am.ActivityManagerService.appNotRespondingViaProvider(android.os.IBinder)
 final void com.android.server.am.ActivityManagerService.applyUpdateLockStateLocked(com.android.server.am.ActivityRecord)
 public final void com.android.server.am.ActivityManagerService.attachApplication(android.app.IApplicationThread)
 void com.android.server.am.ActivityManagerService.backgroundServicesFinishedLocked(int)
 public void com.android.server.am.ActivityManagerService.backupAgentCreated(java.lang.String,android.os.IBinder)
 public void com.android.server.am.ActivityManagerService.batteryNeedsCpuUpdate()
 public void com.android.server.am.ActivityManagerService.batteryPowerChanged(boolean)
 public boolean com.android.server.am.ActivityManagerService.bindBackupAgent(android.content.pm.ApplicationInfo,int)
 public int com.android.server.am.ActivityManagerService.bindService(android.app.IApplicationThread,android.os.IBinder,android.content.Intent,java.lang.String,android.app.IServiceConnection,int,int)
 public final int com.android.server.am.ActivityManagerService.broadcastIntent(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,int,boolean,boolean,int)
 int com.android.server.am.ActivityManagerService.broadcastIntentInPackage(java.lang.String,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,boolean,boolean,int)
 ignorecom.android.printspooler
 com.android.server.am.BroadcastQueue com.android.server.am.ActivityManagerService.broadcastQueueForIntent(android.content.Intent)
 com.android.server.am.BroadcastRecord com.android.server.am.ActivityManagerService.broadcastRecordForReceiverLocked(android.os.IBinder)
 public void com.android.server.am.ActivityManagerService.cancelIntentSender(android.content.IIntentSender)
 void com.android.server.am.ActivityManagerService.cancelIntentSenderLocked(com.android.server.am.PendingIntentRecord,boolean)
 boolean com.android.server.am.ActivityManagerService.checkAppInLaunchingProvidersLocked(com.android.server.am.ProcessRecord,boolean)
 boolean com.android.server.am.ActivityManagerService.checkAppSwitchAllowedLocked(int,int,java.lang.String)
 int com.android.server.am.ActivityManagerService.checkCallingPermission(java.lang.String)
 int com.android.server.am.ActivityManagerService.checkComponentPermission(java.lang.String,int,int,int,boolean)
 final void com.android.server.am.ActivityManagerService.checkExcessivePowerUsageLocked(boolean)
 public int com.android.server.am.ActivityManagerService.checkGrantUriPermission(int,java.lang.String,android.net.Uri,int)
 com.android.server.am.ActivityManagerService$NeededUriGrants com.android.server.am.ActivityManagerService.checkGrantUriPermissionFromIntentLocked(int,java.lang.String,android.content.Intent,int,com.android.server.am.ActivityManagerService$NeededUriGrants)
 int com.android.server.am.ActivityManagerService.checkGrantUriPermissionLocked(int,java.lang.String,android.net.Uri,int,int)
 public int com.android.server.am.ActivityManagerService.checkPermission(java.lang.String,int,int)
 public int com.android.server.am.ActivityManagerService.checkUriPermission(android.net.Uri,int,int,int)
 public boolean com.android.server.am.ActivityManagerService.clearApplicationUserData(java.lang.String,android.content.pm.IPackageDataObserver,int)
 public void com.android.server.am.ActivityManagerService.clearPendingBackup()
 public void com.android.server.am.ActivityManagerService.closeSystemDialogs(java.lang.String)
 void com.android.server.am.ActivityManagerService.closeSystemDialogsLocked(java.lang.String)
 java.util.ArrayList com.android.server.am.ActivityManagerService.collectProcesses(java.io.PrintWriter,int,java.lang.String[])
 android.content.res.CompatibilityInfo com.android.server.am.ActivityManagerService.compatibilityInfoForPackageLocked(android.content.pm.ApplicationInfo)
 void com.android.server.am.ActivityManagerService.completeSwitchAndInitalize(com.android.server.am.UserStartedState,int,boolean,boolean)
 void com.android.server.am.ActivityManagerService.continueUserSwitch(com.android.server.am.UserStartedState,int,int)
 public boolean com.android.server.am.ActivityManagerService.convertFromTranslucent(android.os.IBinder)
 public boolean com.android.server.am.ActivityManagerService.convertToTranslucent(android.os.IBinder)
 public void com.android.server.am.ActivityManagerService.crashApplication(int,int,java.lang.String,java.lang.String)
 android.content.Intent com.android.server.am.ActivityManagerService.createAppErrorIntentLocked(com.android.server.am.ProcessRecord,long,android.app.ApplicationErrorReport$CrashInfo)
 public int com.android.server.am.ActivityManagerService.createStack(int,int,int,float)
 boolean com.android.server.am.ActivityManagerService.decProviderCountLocked(com.android.server.am.ContentProviderConnection,com.android.server.am.ContentProviderRecord,android.os.IBinder,boolean)
 public void com.android.server.am.ActivityManagerService.dismissKeyguardOnNextActivity()
 void com.android.server.am.ActivityManagerService.dispatchUserSwitch(com.android.server.am.UserStartedState,int,int)
 final void com.android.server.am.ActivityManagerService.doLowMemReportIfNeededLocked(com.android.server.am.ProcessRecord)
 final void com.android.server.am.ActivityManagerService.doPendingActivityLaunchesLocked(boolean)
 protected void com.android.server.am.ActivityManagerService.dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
 void com.android.server.am.ActivityManagerService.dumpActivitiesLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,boolean,java.lang.String)
 protected boolean com.android.server.am.ActivityManagerService.dumpActivity(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String,java.lang.String[],int,boolean)
 final void com.android.server.am.ActivityManagerService.dumpApplicationMemoryUsage(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String,java.lang.String[],boolean,java.io.PrintWriter)
 void com.android.server.am.ActivityManagerService.dumpBroadcastsLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,java.lang.String)
 final void com.android.server.am.ActivityManagerService.dumpDbInfo(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
 final void com.android.server.am.ActivityManagerService.dumpGraphicsHardwareUsage(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
 public boolean com.android.server.am.ActivityManagerService.dumpHeap(java.lang.String,int,boolean,java.lang.String,android.os.ParcelFileDescriptor) throws android.os.RemoteException
 boolean com.android.server.am.ActivityManagerService.dumpOomLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean)
 void com.android.server.am.ActivityManagerService.dumpPendingIntentsLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,java.lang.String)
 void com.android.server.am.ActivityManagerService.dumpProcessesLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,java.lang.String)
 boolean com.android.server.am.ActivityManagerService.dumpProcessesToGc(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,boolean,java.lang.String)
 protected boolean com.android.server.am.ActivityManagerService.dumpProvider(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String,java.lang.String[],int,boolean)
 void com.android.server.am.ActivityManagerService.dumpProvidersLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int,boolean,java.lang.String)
 void com.android.server.am.ActivityManagerService.enableScreenAfterBoot()
 void com.android.server.am.ActivityManagerService.enforceCallingPermission(java.lang.String,java.lang.String)
 void com.android.server.am.ActivityManagerService.enforceNotIsolatedCaller(java.lang.String)
 final void com.android.server.am.ActivityManagerService.ensureBootCompleted()
 void com.android.server.am.ActivityManagerService.ensurePackageDexOpt(java.lang.String)
 public final void com.android.server.am.ActivityManagerService.enterSafeMode()
 public final boolean com.android.server.am.ActivityManagerService.finishActivity(android.os.IBinder,int,android.content.Intent)
 public boolean com.android.server.am.ActivityManagerService.finishActivityAffinity(android.os.IBinder)
 final native void com.android.server.am.ActivityManagerService.finishBooting()
 public final void com.android.server.am.ActivityManagerService.finishHeavyWeightApp()
 public void com.android.server.am.ActivityManagerService.finishInstrumentation(android.app.IApplicationThread,int,android.os.Bundle)
 void com.android.server.am.ActivityManagerService.finishInstrumentationLocked(com.android.server.am.ProcessRecord,int,android.os.Bundle)
 public void com.android.server.am.ActivityManagerService.finishReceiver(android.os.IBinder,int,java.lang.String,android.os.Bundle,boolean)
 public final void com.android.server.am.ActivityManagerService.finishSubActivity(android.os.IBinder,java.lang.String,int)
 void com.android.server.am.ActivityManagerService.finishUserStop(com.android.server.am.UserStartedState)
 void com.android.server.am.ActivityManagerService.finishUserSwitch(com.android.server.am.UserStartedState)
 public void com.android.server.am.ActivityManagerService.forceStopPackage(java.lang.String,int)
 void com.android.server.am.ActivityManagerService.foregroundTokenDied(com.android.server.am.ActivityManagerService$ForegroundToken)
 public android.content.ComponentName com.android.server.am.ActivityManagerService.getActivityClassForToken(android.os.IBinder)
 android.content.pm.ActivityInfo com.android.server.am.ActivityManagerService.getActivityInfoForUser(android.content.pm.ActivityInfo,int)
 android.content.pm.ApplicationInfo com.android.server.am.ActivityManagerService.getAppInfoForUser(android.content.pm.ApplicationInfo,int)
 public com.android.internal.app.IAppOpsService com.android.server.am.ActivityManagerService.getAppOpsService()
 public android.os.Bundle com.android.server.am.ActivityManagerService.getAssistContextExtras(int)
 public android.content.ComponentName com.android.server.am.ActivityManagerService.getCallingActivity(android.os.IBinder)
 public java.lang.String com.android.server.am.ActivityManagerService.getCallingPackage(android.os.IBinder)
 public android.content.res.Configuration com.android.server.am.ActivityManagerService.getConfiguration()
 public final android.app.IActivityManager$ContentProviderHolder com.android.server.am.ActivityManagerService.getContentProvider(android.app.IApplicationThread,java.lang.String,int,boolean)
 public android.app.IActivityManager$ContentProviderHolder com.android.server.am.ActivityManagerService.getContentProviderExternal(java.lang.String,int,android.os.IBinder)
 public android.content.pm.UserInfo com.android.server.am.ActivityManagerService.getCurrentUser()
 int com.android.server.am.ActivityManagerService.getCurrentUserIdLocked()
 public android.content.pm.ConfigurationInfo com.android.server.am.ActivityManagerService.getDeviceConfigurationInfo()
 com.android.server.am.ActivityStack com.android.server.am.ActivityManagerService.getFocusedStack()
 public int com.android.server.am.ActivityManagerService.getFrontActivityScreenCompatMode()
 android.content.Intent com.android.server.am.ActivityManagerService.getHomeIntent()
 public android.content.Intent com.android.server.am.ActivityManagerService.getIntentForIntentSender(android.content.IIntentSender)
 public android.content.IIntentSender com.android.server.am.ActivityManagerService.getIntentSender(int,java.lang.String,android.os.IBinder,java.lang.String,int,android.content.Intent[],java.lang.String[],int,android.os.Bundle,int)
 android.content.IIntentSender com.android.server.am.ActivityManagerService.getIntentSenderLocked(int,java.lang.String,int,int,android.os.IBinder,java.lang.String,int,android.content.Intent[],java.lang.String[],int,android.os.Bundle)
 public java.lang.String com.android.server.am.ActivityManagerService.getLaunchedFromPackage(android.os.IBinder)
 public int com.android.server.am.ActivityManagerService.getLaunchedFromUid(android.os.IBinder)
 public void com.android.server.am.ActivityManagerService.getMemoryInfo(android.app.ActivityManager$MemoryInfo)
 com.android.server.am.TaskRecord com.android.server.am.ActivityManagerService.getMostRecentTask()
 public void com.android.server.am.ActivityManagerService.getMyMemoryState(android.app.ActivityManager$RunningAppProcessInfo)
 public boolean com.android.server.am.ActivityManagerService.getPackageAskScreenCompat(java.lang.String)
 public java.lang.String com.android.server.am.ActivityManagerService.getPackageForIntentSender(android.content.IIntentSender)
 public java.lang.String com.android.server.am.ActivityManagerService.getPackageForToken(android.os.IBinder)
 public int com.android.server.am.ActivityManagerService.getPackageScreenCompatMode(java.lang.String)
 public android.content.pm.ParceledListSlice com.android.server.am.ActivityManagerService.getPersistedUriPermissions(java.lang.String,boolean)
 public int com.android.server.am.ActivityManagerService.getProcessLimit()
 public [Landroid.os.Debug$MemoryInfo; com.android.server.am.ActivityManagerService.getProcessMemoryInfo(int[])
 public [J com.android.server.am.ActivityManagerService.getProcessPss(int[])
 final com.android.server.am.ProcessRecord com.android.server.am.ActivityManagerService.getProcessRecordLocked(java.lang.String,int,boolean)
 public java.util.List com.android.server.am.ActivityManagerService.getProcessesInErrorState()
 public java.lang.String com.android.server.am.ActivityManagerService.getProviderMimeType(android.net.Uri,int)
 public java.util.List com.android.server.am.ActivityManagerService.getRecentTasks(int,int,int)
 final com.android.server.am.ProcessRecord com.android.server.am.ActivityManagerService.getRecordForAppLocked(android.app.IApplicationThread)
 public int com.android.server.am.ActivityManagerService.getRequestedOrientation(android.os.IBinder)
 public java.util.List com.android.server.am.ActivityManagerService.getRunningAppProcesses()
 public java.util.List com.android.server.am.ActivityManagerService.getRunningExternalApplications()
 public android.app.PendingIntent com.android.server.am.ActivityManagerService.getRunningServiceControlPanel(android.content.ComponentName)
 public [I com.android.server.am.ActivityManagerService.getRunningUserIds()
 public java.util.List com.android.server.am.ActivityManagerService.getServices(int,int)
 public android.app.ActivityManager$StackBoxInfo com.android.server.am.ActivityManagerService.getStackBoxInfo(int)
 public java.util.List com.android.server.am.ActivityManagerService.getStackBoxes()
 public int com.android.server.am.ActivityManagerService.getTaskForActivity(android.os.IBinder,boolean)
 public android.app.ActivityManager$TaskThumbnails com.android.server.am.ActivityManagerService.getTaskThumbnails(int)
 public android.graphics.Bitmap com.android.server.am.ActivityManagerService.getTaskTopThumbnail(int)
 public java.util.List com.android.server.am.ActivityManagerService.getTasks(int,int,android.app.IThumbnailReceiver)
 public int com.android.server.am.ActivityManagerService.getUidForIntentSender(android.content.IIntentSender)
 com.android.server.pm.UserManagerService com.android.server.am.ActivityManagerService.getUserManagerLocked()
 [I com.android.server.am.ActivityManagerService.getUsersLocked()
 public native void com.android.server.am.ActivityManagerService.goingToSleep()
 public void com.android.server.am.ActivityManagerService.grantUriPermission(android.app.IApplicationThread,java.lang.String,android.net.Uri,int)
 void com.android.server.am.ActivityManagerService.grantUriPermissionFromIntentLocked(int,java.lang.String,android.content.Intent,com.android.server.am.UriPermissionOwner)
 public void com.android.server.am.ActivityManagerService.grantUriPermissionFromOwner(android.os.IBinder,int,java.lang.String,android.net.Uri,int)
 void com.android.server.am.ActivityManagerService.grantUriPermissionLocked(int,java.lang.String,android.net.Uri,int,com.android.server.am.UriPermissionOwner)
 void com.android.server.am.ActivityManagerService.grantUriPermissionUncheckedFromIntentLocked(com.android.server.am.ActivityManagerService$NeededUriGrants,com.android.server.am.UriPermissionOwner)
 void com.android.server.am.ActivityManagerService.grantUriPermissionUncheckedLocked(int,java.lang.String,android.net.Uri,int,com.android.server.am.UriPermissionOwner)
 public void com.android.server.am.ActivityManagerService.handleApplicationCrash(android.os.IBinder,android.app.ApplicationErrorReport$CrashInfo)
 void com.android.server.am.ActivityManagerService.handleApplicationCrashInner(java.lang.String,com.android.server.am.ProcessRecord,java.lang.String,android.app.ApplicationErrorReport$CrashInfo)
 public void com.android.server.am.ActivityManagerService.handleApplicationStrictModeViolation(android.os.IBinder,int,android.os.StrictMode$ViolationInfo)
 public boolean com.android.server.am.ActivityManagerService.handleApplicationWtf(android.os.IBinder,java.lang.String,android.app.ApplicationErrorReport$CrashInfo)
 public int com.android.server.am.ActivityManagerService.handleIncomingUser(int,int,int,boolean,boolean,java.lang.String,java.lang.String)
 public void com.android.server.am.ActivityManagerService.hang(android.os.IBinder,boolean)
 com.android.server.am.ContentProviderConnection com.android.server.am.ActivityManagerService.incProviderCountLocked(com.android.server.am.ProcessRecord,com.android.server.am.ContentProviderRecord,android.os.IBinder,boolean)
 public native long com.android.server.am.ActivityManagerService.inputDispatchingTimedOut(int,boolean,java.lang.String)
 public native boolean com.android.server.am.ActivityManagerService.inputDispatchingTimedOut(com.android.server.am.ProcessRecord,com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord,boolean,java.lang.String)
 boolean com.android.server.am.ActivityManagerService.isAllowedWhileBooting(android.content.pm.ApplicationInfo)
 public boolean com.android.server.am.ActivityManagerService.isImmersive(android.os.IBinder)
 public boolean com.android.server.am.ActivityManagerService.isIntentSenderAnActivity(android.content.IIntentSender)
 public boolean com.android.server.am.ActivityManagerService.isIntentSenderTargetedToPackage(android.content.IIntentSender)
 boolean com.android.server.am.ActivityManagerService.isNextTransitionForward()
 boolean com.android.server.am.ActivityManagerService.isPendingBroadcastProcessLocked(int)
 boolean com.android.server.am.ActivityManagerService.isSingleton(java.lang.String,android.content.pm.ApplicationInfo,java.lang.String,int)
 public boolean com.android.server.am.ActivityManagerService.isSleepingOrShuttingDown()
 public boolean com.android.server.am.ActivityManagerService.isTopActivityImmersive()
 public boolean com.android.server.am.ActivityManagerService.isUserAMonkey()
 public boolean com.android.server.am.ActivityManagerService.isUserRunning(int,boolean)
 boolean com.android.server.am.ActivityManagerService.isUserRunningLocked(int,boolean)
 public void com.android.server.am.ActivityManagerService.killAllBackgroundProcesses()
 void com.android.server.am.ActivityManagerService.killAppAtUsersRequest(com.android.server.am.ProcessRecord,android.app.Dialog)
 public void com.android.server.am.ActivityManagerService.killApplicationProcess(java.lang.String,int)
 public void com.android.server.am.ActivityManagerService.killApplicationWithAppId(java.lang.String,int,java.lang.String)
 public void com.android.server.am.ActivityManagerService.killBackgroundProcesses(java.lang.String,int)
 public boolean com.android.server.am.ActivityManagerService.killPids(int[],java.lang.String,boolean)
 public boolean com.android.server.am.ActivityManagerService.killProcessesBelowForeground(java.lang.String)
 public void com.android.server.am.ActivityManagerService.killUid(int,java.lang.String)
 final void com.android.server.am.ActivityManagerService.logAppTooSlow(com.android.server.am.ProcessRecord,long,java.lang.String)
 void com.android.server.am.ActivityManagerService.logLockScreen(java.lang.String)
 public void com.android.server.am.ActivityManagerService.monitor()
 public boolean com.android.server.am.ActivityManagerService.moveActivityTaskToBack(android.os.IBinder,boolean)
 public void com.android.server.am.ActivityManagerService.moveTaskBackwards(int)
 public void com.android.server.am.ActivityManagerService.moveTaskToBack(int)
 public void com.android.server.am.ActivityManagerService.moveTaskToFront(int,int,android.os.Bundle)
 public void com.android.server.am.ActivityManagerService.moveTaskToStack(int,int,boolean)
 public boolean com.android.server.am.ActivityManagerService.navigateUpTo(android.os.IBinder,android.content.Intent,int,android.content.Intent)
 final com.android.server.am.ProcessRecord com.android.server.am.ActivityManagerService.newProcessRecordLocked(android.content.pm.ApplicationInfo,java.lang.String,boolean)
 public android.os.IBinder com.android.server.am.ActivityManagerService.newUriPermissionOwner(java.lang.String)
 public void com.android.server.am.ActivityManagerService.noteWakeupAlarm(android.content.IIntentSender)
 public void com.android.server.am.ActivityManagerService.notifyActivityDrawn(android.os.IBinder)
 void com.android.server.am.ActivityManagerService.onCoreSettingsChange(android.os.Bundle)
 public boolean com.android.server.am.ActivityManagerService.onTransact(int,android.os.Parcel,android.os.Parcel,int) throws android.os.RemoteException
 public android.os.ParcelFileDescriptor com.android.server.am.ActivityManagerService.openContentUri(android.net.Uri) throws android.os.RemoteException
 public void com.android.server.am.ActivityManagerService.overridePendingTransition(android.os.IBinder,java.lang.String,int,int)
 public android.os.IBinder com.android.server.am.ActivityManagerService.peekService(android.content.Intent,java.lang.String)
 final void com.android.server.am.ActivityManagerService.performAppGcLocked(com.android.server.am.ProcessRecord)
 final void com.android.server.am.ActivityManagerService.performAppGcsIfAppropriateLocked()
 final void com.android.server.am.ActivityManagerService.performAppGcsLocked()
 public void com.android.server.am.ActivityManagerService.performIdleMaintenance()
 void com.android.server.am.ActivityManagerService.printOomLevel(java.io.PrintWriter,java.lang.String,int)
 public boolean com.android.server.am.ActivityManagerService.profileControl(java.lang.String,int,boolean,java.lang.String,android.os.ParcelFileDescriptor,int) throws android.os.RemoteException
 public final void com.android.server.am.ActivityManagerService.publishContentProviders(android.app.IApplicationThread,java.util.List)
 public void com.android.server.am.ActivityManagerService.publishService(android.os.IBinder,android.content.Intent,android.os.IBinder)
 public boolean com.android.server.am.ActivityManagerService.refContentProvider(android.os.IBinder,int,int)
 public void com.android.server.am.ActivityManagerService.registerProcessObserver(android.app.IProcessObserver)
 public android.content.Intent com.android.server.am.ActivityManagerService.registerReceiver(android.app.IApplicationThread,java.lang.String,android.content.IIntentReceiver,android.content.IntentFilter,java.lang.String,int)
 public void com.android.server.am.ActivityManagerService.registerUserSwitchObserver(android.app.IUserSwitchObserver)
 public void com.android.server.am.ActivityManagerService.releasePersistableUriPermission(android.net.Uri,int)
 public void com.android.server.am.ActivityManagerService.removeContentProvider(android.os.IBinder,boolean)
 public void com.android.server.am.ActivityManagerService.removeContentProviderExternal(java.lang.String,android.os.IBinder)
 final void com.android.server.am.ActivityManagerService.removeLruProcessLocked(com.android.server.am.ProcessRecord)
 void com.android.server.am.ActivityManagerService.removeReceiverLocked(com.android.server.am.ReceiverList)
 public boolean com.android.server.am.ActivityManagerService.removeSubTask(int,int)
 public boolean com.android.server.am.ActivityManagerService.removeTask(int,int)
 void com.android.server.am.ActivityManagerService.removeUriPermissionIfNeededLocked(com.android.server.am.UriPermission)
 public void com.android.server.am.ActivityManagerService.reportActivityFullyDrawn(android.os.IBinder)
 public void com.android.server.am.ActivityManagerService.reportAssistContextExtras(android.os.IBinder,android.os.Bundle)
 public void com.android.server.am.ActivityManagerService.reportThumbnail(android.os.IBinder,android.graphics.Bitmap,java.lang.CharSequence)
 public void com.android.server.am.ActivityManagerService.requestBugReport()
 void com.android.server.am.ActivityManagerService.requestPssAllProcsLocked(long,boolean,boolean)
 void com.android.server.am.ActivityManagerService.requestPssLocked(com.android.server.am.ProcessRecord,int)
 public void com.android.server.am.ActivityManagerService.resizeStackBox(int,float)
 public void com.android.server.am.ActivityManagerService.restart()
 public void com.android.server.am.ActivityManagerService.resumeAppSwitches()
 public void com.android.server.am.ActivityManagerService.revokeUriPermission(android.app.IApplicationThread,android.net.Uri,int)
 public void com.android.server.am.ActivityManagerService.revokeUriPermissionFromOwner(android.os.IBinder,android.net.Uri,int)
 final void com.android.server.am.ActivityManagerService.scheduleAppGcLocked(com.android.server.am.ProcessRecord)
 final void com.android.server.am.ActivityManagerService.scheduleAppGcsLocked()
 void com.android.server.am.ActivityManagerService.sendContinueUserSwitchLocked(com.android.server.am.UserStartedState,int,int)
 boolean com.android.server.am.ActivityManagerService.sendPendingBroadcastsLocked(com.android.server.am.ProcessRecord)
 final void com.android.server.am.ActivityManagerService.sendPendingThumbnail(com.android.server.am.ActivityRecord,android.os.IBinder,android.graphics.Bitmap,java.lang.CharSequence,boolean)
 void com.android.server.am.ActivityManagerService.sendUserSwitchBroadcastsLocked(int,int)
 public void com.android.server.am.ActivityManagerService.serviceDoneExecuting(android.os.IBinder,int,int,int)
 public void com.android.server.am.ActivityManagerService.setActivityController(android.app.IActivityController)
 public void com.android.server.am.ActivityManagerService.setAlwaysFinish(boolean)
 public void com.android.server.am.ActivityManagerService.setDebugApp(java.lang.String,boolean,boolean)
 final void com.android.server.am.ActivityManagerService.setFocusedActivityLocked(com.android.server.am.ActivityRecord)
 public void com.android.server.am.ActivityManagerService.setFocusedStack(int)
 public void com.android.server.am.ActivityManagerService.setFrontActivityScreenCompatMode(int)
 public void com.android.server.am.ActivityManagerService.setImmersive(android.os.IBinder,boolean)
 public native void com.android.server.am.ActivityManagerService.setLockScreenShown(boolean)
 void com.android.server.am.ActivityManagerService.setOpenGlTraceApp(android.content.pm.ApplicationInfo,java.lang.String)
 public void com.android.server.am.ActivityManagerService.setPackageAskScreenCompat(java.lang.String,boolean)
 public void com.android.server.am.ActivityManagerService.setPackageScreenCompatMode(java.lang.String,int)
 public void com.android.server.am.ActivityManagerService.setProcessForeground(android.os.IBinder,int,boolean)
 public void com.android.server.am.ActivityManagerService.setProcessLimit(int)
 void com.android.server.am.ActivityManagerService.setProfileApp(android.content.pm.ApplicationInfo,java.lang.String,java.lang.String,android.os.ParcelFileDescriptor,boolean)
 public void com.android.server.am.ActivityManagerService.setRequestedOrientation(android.os.IBinder,int)
 public void com.android.server.am.ActivityManagerService.setServiceForeground(android.content.ComponentName,android.os.IBinder,int,android.app.Notification,boolean)
 public void com.android.server.am.ActivityManagerService.setUserIsMonkey(boolean)
 public void com.android.server.am.ActivityManagerService.setWindowManager(com.android.server.wm.WindowManagerService)
 final void com.android.server.am.ActivityManagerService.showAskCompatModeDialogLocked(com.android.server.am.ActivityRecord)
 public void com.android.server.am.ActivityManagerService.showBootMessage(java.lang.CharSequence,boolean)
 final void com.android.server.am.ActivityManagerService.showLaunchWarningLocked(com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord)
 public final void com.android.server.am.ActivityManagerService.showSafeModeOverlay()
 public void com.android.server.am.ActivityManagerService.showWaitingForDebugger(android.app.IApplicationThread,boolean)
 public native boolean com.android.server.am.ActivityManagerService.shutdown(int)
 public void com.android.server.am.ActivityManagerService.signalPersistentProcesses(int) throws android.os.RemoteException
 void com.android.server.am.ActivityManagerService.skipCurrentReceiverLocked(com.android.server.am.ProcessRecord)
 void com.android.server.am.ActivityManagerService.skipPendingBroadcastLocked(int)
 public final int com.android.server.am.ActivityManagerService.startActivities(android.app.IApplicationThread,java.lang.String,android.content.Intent[],java.lang.String[],android.os.IBinder,android.os.Bundle,int)
 final int com.android.server.am.ActivityManagerService.startActivitiesInPackage(int,java.lang.String,android.content.Intent[],java.lang.String[],android.os.IBinder,android.os.Bundle,int)
 public final int com.android.server.am.ActivityManagerService.startActivity(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,java.lang.String,android.os.ParcelFileDescriptor,android.os.Bundle)
 public final android.app.IActivityManager$WaitResult com.android.server.am.ActivityManagerService.startActivityAndWait(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,java.lang.String,android.os.ParcelFileDescriptor,android.os.Bundle,int)
 public final int com.android.server.am.ActivityManagerService.startActivityAsUser(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,java.lang.String,android.os.ParcelFileDescriptor,android.os.Bundle,int)
 final int com.android.server.am.ActivityManagerService.startActivityInPackage(int,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.os.Bundle,int)
 public int com.android.server.am.ActivityManagerService.startActivityIntentSender(android.app.IApplicationThread,android.content.IntentSender,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,int,android.os.Bundle)
 public final int com.android.server.am.ActivityManagerService.startActivityWithConfig(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.content.res.Configuration,android.os.Bundle,int)
 void com.android.server.am.ActivityManagerService.startAppProblemLocked(com.android.server.am.ProcessRecord)
 boolean com.android.server.am.ActivityManagerService.startHomeActivityLocked(int)
 public boolean com.android.server.am.ActivityManagerService.startInstrumentation(android.content.ComponentName,java.lang.String,int,android.os.Bundle,android.app.IInstrumentationWatcher,android.app.IUiAutomationConnection,int)
 public boolean com.android.server.am.ActivityManagerService.startNextMatchingActivity(android.os.IBinder,android.content.Intent,android.os.Bundle)
 public void com.android.server.am.ActivityManagerService.startObservingNativeCrashes()
 final com.android.server.am.ProcessRecord com.android.server.am.ActivityManagerService.startProcessLocked(java.lang.String,android.content.pm.ApplicationInfo,boolean,int,java.lang.String,android.content.ComponentName,boolean,boolean,boolean)
 public final void com.android.server.am.ActivityManagerService.startRunning(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
 public android.content.ComponentName com.android.server.am.ActivityManagerService.startService(android.app.IApplicationThread,android.content.Intent,java.lang.String,int)
 android.content.ComponentName com.android.server.am.ActivityManagerService.startServiceInPackage(int,android.content.Intent,java.lang.String,int)
 void com.android.server.am.ActivityManagerService.startSetupActivityLocked()
 public void com.android.server.am.ActivityManagerService.stopAppSwitches()
 public int com.android.server.am.ActivityManagerService.stopService(android.app.IApplicationThread,android.content.Intent,java.lang.String,int)
 public boolean com.android.server.am.ActivityManagerService.stopServiceToken(android.content.ComponentName,android.os.IBinder,int)
 public int com.android.server.am.ActivityManagerService.stopUser(int,android.app.IStopUserCallback)
 public boolean com.android.server.am.ActivityManagerService.switchUser(int)
 public native void com.android.server.am.ActivityManagerService.systemReady(java.lang.Runnable)
 public void com.android.server.am.ActivityManagerService.takePersistableUriPermission(android.net.Uri,int)
 public boolean com.android.server.am.ActivityManagerService.targetTaskAffinityMatchesActivity(android.os.IBinder,java.lang.String)
 public boolean com.android.server.am.ActivityManagerService.testIsSystemReady()
 void com.android.server.am.ActivityManagerService.timeoutUserSwitch(com.android.server.am.UserStartedState,int,int)
 final void com.android.server.am.ActivityManagerService.trimApplications()
 public void com.android.server.am.ActivityManagerService.unbindBackupAgent(android.content.pm.ApplicationInfo)
 public void com.android.server.am.ActivityManagerService.unbindFinished(android.os.IBinder,android.content.Intent,boolean)
 public boolean com.android.server.am.ActivityManagerService.unbindService(android.app.IServiceConnection)
 public final void com.android.server.am.ActivityManagerService.unbroadcastIntent(android.app.IApplicationThread,android.content.Intent,int)
 public void com.android.server.am.ActivityManagerService.unhandledBack()
 public void com.android.server.am.ActivityManagerService.unregisterProcessObserver(android.app.IProcessObserver)
 public void com.android.server.am.ActivityManagerService.unregisterReceiver(android.content.IIntentReceiver)
 public void com.android.server.am.ActivityManagerService.unregisterUserSwitchObserver(android.app.IUserSwitchObserver)
 public void com.android.server.am.ActivityManagerService.unstableProviderDied(android.os.IBinder)
 public void com.android.server.am.ActivityManagerService.updateConfiguration(android.content.res.Configuration)
 boolean com.android.server.am.ActivityManagerService.updateConfigurationLocked(android.content.res.Configuration,com.android.server.am.ActivityRecord,boolean,boolean)
 void com.android.server.am.ActivityManagerService.updateCpuStats()
 void com.android.server.am.ActivityManagerService.updateCpuStatsNow()
 final void com.android.server.am.ActivityManagerService.updateLruProcessLocked(com.android.server.am.ProcessRecord,boolean,com.android.server.am.ProcessRecord)
 final void com.android.server.am.ActivityManagerService.updateOomAdjLocked()
 final boolean com.android.server.am.ActivityManagerService.updateOomAdjLocked(com.android.server.am.ProcessRecord)
 final boolean com.android.server.am.ActivityManagerService.updateOomAdjLocked(com.android.server.am.ProcessRecord,boolean)
 public void com.android.server.am.ActivityManagerService.updatePersistentConfiguration(android.content.res.Configuration)
 void com.android.server.am.ActivityManagerService.updateUsageStats(com.android.server.am.ActivityRecord,boolean)
 void com.android.server.am.ActivityManagerService.userInitialized(com.android.server.am.UserStartedState,int)
 final android.content.Intent com.android.server.am.ActivityManagerService.verifyBroadcastLocked(android.content.Intent)
 public native void com.android.server.am.ActivityManagerService.wakingUp()
 public boolean com.android.server.am.ActivityManagerService.willActivityBeVisible(android.os.IBinder)
 static boolean com.android.server.am.ActivityManagerService.access$000(com.android.server.am.ActivityManagerService)
 static int com.android.server.am.ActivityManagerService.access$100(com.android.server.am.ActivityManagerService,com.android.server.am.ProcessRecord,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,int,boolean,boolean,int,int,int)
 static void com.android.server.am.ActivityManagerService.access$200(com.android.server.am.ActivityManagerService,com.android.server.am.ProcessRecord)
 static boolean com.android.server.am.ActivityManagerService.access$300(com.android.server.am.ActivityManagerService,java.lang.String,int,boolean,boolean,boolean,boolean,int,java.lang.String)
 static void com.android.server.am.ActivityManagerService.access$400(com.android.server.am.ActivityManagerService)
 static void com.android.server.am.ActivityManagerService.access$500(com.android.server.am.ActivityManagerService,int,int)
 static void com.android.server.am.ActivityManagerService.access$600(com.android.server.am.ActivityManagerService)
 static void com.android.server.am.ActivityManagerService.access$800(java.util.ArrayList)
 static java.lang.StringBuilder com.android.server.am.ActivityManagerService.access$900(com.android.server.am.ActivityManagerService)
 private void com.android.server.am.ActivityManagerService.addStackInfoToStackBoxInfo(android.app.ActivityManager$StackBoxInfo,java.util.List)
 private void com.android.server.am.ActivityManagerService.appendDropBoxProcessHeaders(com.android.server.am.ProcessRecord,java.lang.String,java.lang.StringBuilder)
 static final void com.android.server.am.ActivityManagerService.appendMemBucket(java.lang.StringBuilder,long,java.lang.String,boolean)
 private final boolean com.android.server.am.ActivityManagerService.applyOomAdjLocked(com.android.server.am.ProcessRecord,boolean,com.android.server.am.ProcessRecord,boolean,boolean,long)
 private int com.android.server.am.ActivityManagerService.applyUserId(int,int)
 private final boolean com.android.server.am.ActivityManagerService.attachApplicationLocked(android.app.IApplicationThread,int)
 private final int com.android.server.am.ActivityManagerService.broadcastIntentLocked(com.android.server.am.ProcessRecord,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,int,boolean,boolean,int,int,int)
 private final boolean com.android.server.am.ActivityManagerService.canGcNowLocked()
 private final java.lang.String com.android.server.am.ActivityManagerService.checkContentProviderPermissionLocked(android.content.pm.ProviderInfo,com.android.server.am.ProcessRecord)
 private final boolean com.android.server.am.ActivityManagerService.checkHoldingPermissionsLocked(android.content.pm.IPackageManager,android.content.pm.ProviderInfo,android.net.Uri,int,int)
 private final boolean com.android.server.am.ActivityManagerService.checkUriPermissionLocked(android.net.Uri,int,int,int)
 private final void com.android.server.am.ActivityManagerService.cleanUpApplicationRecordLocked(com.android.server.am.ProcessRecord,boolean,boolean,int)
 private void com.android.server.am.ActivityManagerService.cleanUpRemovedTaskLocked(com.android.server.am.TaskRecord,int)
 private void com.android.server.am.ActivityManagerService.clearProfilerLocked()
 private java.util.List com.android.server.am.ActivityManagerService.collectReceiverComponents(android.content.Intent,java.lang.String,int[])
 private void com.android.server.am.ActivityManagerService.comeOutOfSleepIfNeededLocked()
 private final int com.android.server.am.ActivityManagerService.computeOomAdjLocked(com.android.server.am.ProcessRecord,int,com.android.server.am.ProcessRecord,boolean,long)
 private void com.android.server.am.ActivityManagerService.crashApplication(com.android.server.am.ProcessRecord,android.app.ApplicationErrorReport$CrashInfo)
 private android.app.ApplicationErrorReport com.android.server.am.ActivityManagerService.createAppErrorReportLocked(com.android.server.am.ProcessRecord,long,android.app.ApplicationErrorReport$CrashInfo)
 private void com.android.server.am.ActivityManagerService.dispatchProcessDied(int,int)
 private void com.android.server.am.ActivityManagerService.dispatchProcessesChanged()
 private void com.android.server.am.ActivityManagerService.dumpActivity(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,com.android.server.am.ActivityRecord,java.lang.String[],boolean)
 private final void com.android.server.am.ActivityManagerService.dumpApplicationMemoryUsageHeader(java.io.PrintWriter,long,long,boolean,boolean)
 static final void com.android.server.am.ActivityManagerService.dumpMemItems(java.io.PrintWriter,java.lang.String,java.lang.String,java.util.ArrayList,boolean,boolean)
 private static final int com.android.server.am.ActivityManagerService.dumpProcessList(java.io.PrintWriter,com.android.server.am.ActivityManagerService,java.util.List,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
 private static final boolean com.android.server.am.ActivityManagerService.dumpProcessOomList(java.io.PrintWriter,com.android.server.am.ActivityManagerService,java.util.List,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String)
 public static java.io.File com.android.server.am.ActivityManagerService.dumpStackTraces(boolean,java.util.ArrayList,com.android.internal.os.ProcessCpuTracker,android.util.SparseArray,java.lang.String[])
 private static void com.android.server.am.ActivityManagerService.dumpStackTraces(java.lang.String,java.util.ArrayList,com.android.internal.os.ProcessCpuTracker,android.util.SparseArray,java.lang.String[])
 private void com.android.server.am.ActivityManagerService.fillInProcMemInfo(com.android.server.am.ProcessRecord,android.app.ActivityManager$RunningAppProcessInfo)
 private com.android.server.am.ProcessRecord com.android.server.am.ActivityManagerService.findAppProcess(android.os.IBinder,java.lang.String)
 private com.android.server.am.UriPermission com.android.server.am.ActivityManagerService.findOrCreateUriPermissionLocked(java.lang.String,java.lang.String,int,android.net.Uri)
 private com.android.server.am.ProcessRecord com.android.server.am.ActivityManagerService.findProcessLocked(java.lang.String,int,java.lang.String)
 private com.android.server.am.UriPermission com.android.server.am.ActivityManagerService.findUriPermissionLocked(int,android.net.Uri)
 private final boolean com.android.server.am.ActivityManagerService.finishReceiverLocked(android.os.IBinder,int,java.lang.String,android.os.Bundle,boolean)
 private void com.android.server.am.ActivityManagerService.forceStopPackageLocked(java.lang.String,int,java.lang.String)
 private final boolean com.android.server.am.ActivityManagerService.forceStopPackageLocked(java.lang.String,int,boolean,boolean,boolean,boolean,int,java.lang.String)
 private void com.android.server.am.ActivityManagerService.forceStopUserLocked(int,java.lang.String)
 private final java.util.List com.android.server.am.ActivityManagerService.generateApplicationProvidersLocked(com.android.server.am.ProcessRecord)
 private android.app.ActivityManager$ProcessErrorStateInfo com.android.server.am.ActivityManagerService.generateProcessError(com.android.server.am.ProcessRecord,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
 private static java.io.File com.android.server.am.ActivityManagerService.getCalledPreBootReceiversFile()
 private com.android.server.am.ActivityRecord com.android.server.am.ActivityManagerService.getCallingRecordLocked(android.os.IBinder)
 private java.util.HashMap com.android.server.am.ActivityManagerService.getCommonServicesLocked()
 private android.app.IActivityManager$ContentProviderHolder com.android.server.am.ActivityManagerService.getContentProviderExternalUnchecked(java.lang.String,android.os.IBinder,int)
 private final android.app.IActivityManager$ContentProviderHolder com.android.server.am.ActivityManagerService.getContentProviderImpl(android.app.IApplicationThread,java.lang.String,android.os.IBinder,boolean,int)
 public static long com.android.server.am.ActivityManagerService.getInputDispatchingTimeoutLocked(com.android.server.am.ActivityRecord)
 public static long com.android.server.am.ActivityManagerService.getInputDispatchingTimeoutLocked(com.android.server.am.ProcessRecord)
 private final int com.android.server.am.ActivityManagerService.getLRURecordIndexForAppLocked(android.app.IApplicationThread)
 private long com.android.server.am.ActivityManagerService.getLowRamTimeSinceIdle(long)
 private android.content.pm.ProviderInfo com.android.server.am.ActivityManagerService.getProviderInfoLocked(java.lang.String,int)
 private java.util.ArrayList com.android.server.am.ActivityManagerService.getStacks()
 private final java.util.List com.android.server.am.ActivityManagerService.getStickiesLocked(java.lang.String,android.content.IntentFilter,java.util.List,int)
 private boolean com.android.server.am.ActivityManagerService.handleAppCrashLocked(com.android.server.am.ProcessRecord,java.lang.String,java.lang.String,java.lang.String)
 private final void com.android.server.am.ActivityManagerService.handleAppDiedLocked(com.android.server.am.ProcessRecord,boolean,boolean)
 public static final void com.android.server.am.ActivityManagerService.installSystemProviders()
 private com.android.server.am.BroadcastQueue com.android.server.am.ActivityManagerService.isReceivingBroadcast(com.android.server.am.ProcessRecord)
 private final boolean com.android.server.am.ActivityManagerService.killPackageProcessesLocked(java.lang.String,int,int,int,boolean,boolean,boolean,boolean,java.lang.String)
 private boolean com.android.server.am.ActivityManagerService.killProcessesBelowAdj(int,java.lang.String)
 private void com.android.server.am.ActivityManagerService.killUnneededProcessLocked(com.android.server.am.ProcessRecord,java.lang.String)
 private void com.android.server.am.ActivityManagerService.logStrictModeViolationToDropBox(com.android.server.am.ProcessRecord,android.os.StrictMode$ViolationInfo)
 public static final android.content.Context com.android.server.am.ActivityManagerService.main(int)
 private boolean com.android.server.am.ActivityManagerService.makeAppCrashingLocked(com.android.server.am.ProcessRecord,java.lang.String,java.lang.String,java.lang.String)
 private void com.android.server.am.ActivityManagerService.makeAppNotRespondingLocked(com.android.server.am.ProcessRecord,java.lang.String,java.lang.String,java.lang.String)
 private boolean com.android.server.am.ActivityManagerService.maybePrunePersistedUriGrantsLocked(int)
 private final void com.android.server.am.ActivityManagerService.moveTaskBackwardsLocked(int)
 static int com.android.server.am.ActivityManagerService.oomAdjToImportance(int,android.app.ActivityManager$RunningAppProcessInfo)
 private static java.lang.String com.android.server.am.ActivityManagerService.processClass(com.android.server.am.ProcessRecord)
 private final void com.android.server.am.ActivityManagerService.processStartTimedOutLocked(com.android.server.am.ProcessRecord)
 private void com.android.server.am.ActivityManagerService.readGrantedUriPermissionsLocked()
 private static java.util.ArrayList com.android.server.am.ActivityManagerService.readLastDonePreBootReceivers()
 private com.android.server.am.TaskRecord com.android.server.am.ActivityManagerService.recentTaskForIdLocked(int)
 private void com.android.server.am.ActivityManagerService.removeContentProviderExternalUnchecked(java.lang.String,android.os.IBinder,int)
 private final boolean com.android.server.am.ActivityManagerService.removeDyingProviderLocked(com.android.server.am.ProcessRecord,com.android.server.am.ContentProviderRecord,boolean)
 private final boolean com.android.server.am.ActivityManagerService.removeProcessLocked(com.android.server.am.ProcessRecord,boolean,boolean,java.lang.String)
 private void com.android.server.am.ActivityManagerService.removeUriPermissionsForPackageLocked(java.lang.String,int,boolean)
 private void com.android.server.am.ActivityManagerService.reportStartInstrumentationFailure(android.app.IInstrumentationWatcher,android.content.ComponentName,java.lang.String)
 private android.content.pm.ActivityInfo com.android.server.am.ActivityManagerService.resolveActivityInfo(android.content.Intent,int,int)
 private final com.android.server.am.ActivityRecord com.android.server.am.ActivityManagerService.resumedAppLocked()
 private void com.android.server.am.ActivityManagerService.retrieveSettings()
 private void com.android.server.am.ActivityManagerService.revokeUriPermissionLocked(int,android.net.Uri,int)
 private void com.android.server.am.ActivityManagerService.saveLocaleLocked(java.util.Locale,boolean,boolean)
 private static boolean com.android.server.am.ActivityManagerService.scanArgs(java.lang.String[],java.lang.String)
 private void com.android.server.am.ActivityManagerService.schedulePersistUriGrants()
 public static com.android.server.am.ActivityManagerService com.android.server.am.ActivityManagerService.self()
 private final void com.android.server.am.ActivityManagerService.sendPackageBroadcastLocked(int,java.lang.String[],int)
 private final void com.android.server.am.ActivityManagerService.setProcessTrackerState(com.android.server.am.ProcessRecord,int,long)
 public static void com.android.server.am.ActivityManagerService.setSystemProcess()
 private static final boolean com.android.server.am.ActivityManagerService.shouldShowDialogs(android.content.res.Configuration)
 private final void com.android.server.am.ActivityManagerService.startProcessLocked(com.android.server.am.ProcessRecord,java.lang.String,java.lang.String)
 private void com.android.server.am.ActivityManagerService.stopProfilerLocked(com.android.server.am.ProcessRecord,java.lang.String,int)
 private int com.android.server.am.ActivityManagerService.stopUserLocked(int,android.app.IStopUserCallback)
 private void com.android.server.am.ActivityManagerService.updateEventDispatchingLocked()
 private final int com.android.server.am.ActivityManagerService.updateLruProcessInternalLocked(com.android.server.am.ProcessRecord,long,int,java.lang.String,java.lang.Object,com.android.server.am.ProcessRecord)
 private final boolean com.android.server.am.ActivityManagerService.updateOomAdjLocked(com.android.server.am.ProcessRecord,int,com.android.server.am.ProcessRecord,boolean,boolean,long)
 private void com.android.server.am.ActivityManagerService.updateStartedUserArrayLocked()
 private boolean com.android.server.am.ActivityManagerService.userExists(int)
 private void com.android.server.am.ActivityManagerService.writeGrantedUriPermissions()
 private static void com.android.server.am.ActivityManagerService.writeLastDonePreBootReceivers(java.util.ArrayList)
